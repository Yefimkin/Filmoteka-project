{"mappings":"oeAAA,MAAMA,EAAO,CACTC,kBAAmBC,SAASC,cAAc,mBAC1CC,gBAAiBF,SAASC,cAAc,kBAG5CH,EAAKC,kBAAkBI,iBAAiB,SAIxC,WACEL,EAAKC,kBAAkBK,UAAUC,IAAI,aACrCP,EAAKI,gBAAgBE,UAAUE,OAAO,aACtCR,EAAKS,QAAQC,UAAY,GACzB,MAAMC,EAAeC,iBAAiBC,aACtCC,QAAQC,IAAIJ,GAEZA,EAAaK,KAAIC,GACfC,WAAWC,sBAAsBF,GAAIG,MAAKC,IACxCC,kBAAkBD,WAZxBrB,EAAKI,gBAAgBC,iBAAiB,SAiBtC,WACEL,EAAKC,kBAAkBK,UAAUE,OAAO,aACxCR,EAAKI,gBAAgBE,UAAUC,IAAI,aACnCP,EAAKS,QAAQC,UAAY,GACNE,iBAAiBW,WAEzBP,KAAIC,GACbC,WAAWC,sBAAsBF,GAAIG,MAAKC,IACxCG,gBAAgBH,WC/BtB,IAAAI,EAAAC,EAAA,S,oDAMA,MAAMC,EAAO,CACTC,SAAU1B,SAASC,cAAc,eACjC0B,WAAY3B,SAASC,cAAc,mBACnC2B,SAAU5B,SAASC,cAAc,kBAK/B4B,EAAiB,IAAI,EAAAN,EAAAO,gBAO3BC,eAAeC,IACX,MAAMC,GAAe,EAAAC,EAAAC,kBAVN,WAaf,GAFAV,EAAKC,SAASlB,UAAY,IAErByB,GAAwC,IAAxBA,EAAaG,OAE9B,YADAC,EAAAC,OAAOC,KAAK,2BAIhB,MAAMC,EAAkBP,EAAanB,KAAIiB,MAAMU,IAC3CZ,EAAea,GAAKD,QACPZ,EAAec,oBAG1BC,QAAqBC,QAAQC,IAAIN,GAGjCO,SADuBlB,EAAemB,eACTC,OACnCxB,EAAKC,SAASlB,WAAY,EAAA0C,EAAAC,SAAcP,EAAcG,GAvB1DtB,EAAKE,WAAWxB,iBAAiB,QAAS6B,GAC1CP,EAAKG,SAASzB,iBAAiB,SA2B/B4B,iBACI,MAAME,GAAe,EAAAC,EAAAC,kBAhCR,SAmCb,GAFAV,EAAKC,SAASlB,UAAY,IAErByB,GAAwC,IAAxBA,EAAaG,OAE9B,YADAC,EAAAC,OAAOC,KAAK,2BAIhB,MAAMC,EAAkBP,EAAanB,KAAIiB,MAAMU,IAC3CZ,EAAea,GAAKD,QACPZ,EAAec,oBAG1BC,QAAqBC,QAAQC,IAAIN,GAGjCO,SADuBlB,EAAemB,eACTC,OACnCxB,EAAKC,SAASlB,WAAY,EAAA0C,EAAAC,SAAcP,EAAcG,MA5C1DtB,EAAKC,SAASvB,iBAAiB,QAASiD,EAAAD,SAwBxCnB","sources":["src/js/button-container.js","src/js/libraryTest.js"],"sourcesContent":["const refs = {\n    watchedBtnLibrary: document.querySelector('.watched-button'),\n    queueBtnLibrary: document.querySelector('.queue-button'),\n}\n\nrefs.watchedBtnLibrary.addEventListener('click', showWatchedList);\nrefs.queueBtnLibrary.addEventListener('click', showQueueList);\n\n\nfunction showWatchedList() {\n  refs.watchedBtnLibrary.classList.add('activeBtn');\n  refs.queueBtnLibrary.classList.remove('activeBtn');\n  refs.gallery.innerHTML = '';\n  const watchedArray = localStorageUtil.getWatched();\n  console.log(watchedArray);\n\n  watchedArray.map(id =>\n    apiService.fetchAllInfoAboutFilm(id).then(response => {\n      renderWatchedList(response);\n    }),\n  );\n}\n\nfunction showQueueList() {\n  refs.watchedBtnLibrary.classList.remove('activeBtn');\n  refs.queueBtnLibrary.classList.add('activeBtn');\n  refs.gallery.innerHTML = '';\n  const queueArray = localStorageUtil.getQueue();\n\n  queueArray.map(id =>\n    apiService.fetchAllInfoAboutFilm(id).then(response => {\n      renderQueueList(response);\n    }),\n  );\n}","import { FilmApiService } from \"./filmApiService\";\nimport { readLocalStorage } from \"./localStorage\";\nimport generateCards from \"./renderCards\";\nimport onClickFilm from \"./modal\";\nimport { Notify } from \"notiflix\";\n\nconst refs = {\n    filmList: document.querySelector('.films-list'),\n    watchesBtn: document.querySelector('.watched-button'),\n    queueBtn: document.querySelector('.queue-button'),\n}\n\nconst keyWatched = 'watched';\nconst keyQueue = 'queue';\nconst filmApiService = new FilmApiService();\n\nrefs.watchesBtn.addEventListener('click', showWatchedFilms);\nrefs.queueBtn.addEventListener('click', showQueueFilms);\nrefs.filmList.addEventListener('click', onClickFilm);\n\n\nasync function showWatchedFilms() {\n    const watchedFilms = readLocalStorage(keyWatched);\n    refs.filmList.innerHTML = '';\n\n    if (!watchedFilms || watchedFilms.length === 0) {\n        Notify.info('Your film list is empty');\n        return;\n    }\n\n    const arrayOfPromises = watchedFilms.map(async film => {\n        filmApiService.ID = film;\n        return await filmApiService.fetchMovieByID();\n    })\n\n    const arrayOfFilms = await Promise.all(arrayOfPromises);\n\n    const responseGenres = await filmApiService.fetchGenres()\n    const genresArray = responseGenres.genres;\n    refs.filmList.innerHTML = generateCards(arrayOfFilms, genresArray);\n}\n\nshowWatchedFilms();\n\nasync function showQueueFilms() {\n    const watchedFilms = readLocalStorage(keyQueue);\n    refs.filmList.innerHTML = '';\n\n    if (!watchedFilms || watchedFilms.length === 0) {\n        Notify.info(\"Your film list is empty\");\n        return;\n    }\n\n    const arrayOfPromises = watchedFilms.map(async film => {\n        filmApiService.ID = film;\n        return await filmApiService.fetchMovieByID();\n    })\n\n    const arrayOfFilms = await Promise.all(arrayOfPromises);\n\n    const responseGenres = await filmApiService.fetchGenres();\n    const genresArray = responseGenres.genres;\n    refs.filmList.innerHTML = generateCards(arrayOfFilms, genresArray);\n\n}"],"names":["$3ad58c9dfc22b462$var$refs","watchedBtnLibrary","document","querySelector","queueBtnLibrary","addEventListener","classList","add","remove","gallery","innerHTML","watchedArray","localStorageUtil","getWatched","console","log","map","id","apiService","fetchAllInfoAboutFilm","then","response","renderWatchedList","getQueue","renderQueueList","$k3xAN","parcelRequire","$81f0aad112a4edb9$var$refs","filmList","watchesBtn","queueBtn","$81f0aad112a4edb9$var$filmApiService","FilmApiService","async","$81f0aad112a4edb9$var$showWatchedFilms","watchedFilms","$31u3U","readLocalStorage","length","$eWCmQ","Notify","info","arrayOfPromises","film","ID","fetchMovieByID","arrayOfFilms","Promise","all","genresArray","fetchGenres","genres","$iVxrX","default","$bTcpz"],"version":3,"file":"library.3c8425f3.js.map"}